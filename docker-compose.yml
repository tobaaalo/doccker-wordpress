services:

  nginx:
    image: nginx:latest
    container_name: ${CONTAINER_NAME}_nginx
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    #depends_on:
    #  - wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      HOSTNAME: ${HOSTNAME}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
      - ./nginx:/etc/nginx/conf.d:rw
    
    networks:
      - internal

  database:
    image: mysql:latest
    container_name: ${CONTAINER_NAME}_database
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u","root", "-p$$DATABASE_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10

    ports:
      - "3306:3306"
    networks:
      - internal
    volumes:
      - db_data:/var/lib/mysql

  wordpress:
    depends_on:
      - database
    image: wordpress:6.5.2-fpm-alpine
    container_name: ${CONTAINER_NAME}-wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_USER: '${DATABASE_USER}'
      WORDPRESS_DB_PASSWORD: '${DATABASE_PASSWORD}'
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
    volumes:
      - wordpress_data:/var/www/html
      - ./src:/var/www/html/wp-content:rw
    networks:
      - internal


  phpmyadmin:
      container_name: ${CONTAINER_NAME}-phpmyadmin
      image: phpmyadmin/phpmyadmin
      env_file: .env
      environment:
        PMA_HOST: database
        PMA_PORT: 3306
        MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
      ports:
        - "8081:80"
      networks:
        - internal


volumes:
  db_data:
  wordpress_data:


networks:
  internal:
    driver: bridge
